name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  launch_all:
  
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
    services:
      postgres_db:
        image: postgres:12
        env:
          POSTGRES_DB: "STOCKS_DB"
          POSTGRES_USER: "USER"
          POSTGRES_PASSWORD: "PASSWORD"
        volumes:
          - ./db_data/pg-data:/var/lib/postgresql/data
        ports: ['5432:5432']


 # run-dull-tests:
 #   needs: launch_postgres
  #  runs-on: ubuntu-latest
  #  strategy:
 #     fail-fast: false
  #    matrix:
  #      python-version: [ 3.9 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          cd web_app
          python -m pip install flake8 pytest poetry
          pip install docker-compose
          poetry config virtualenvs.create false
          poetry update
      #    - name: Launch docker
      #      run: |
      #        docker-compose up -d database_local
      #        docker ps -a
      - name: Flask upgrade
        run: |
          cd web_app
          flask db upgrade
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          cd web_app
          pytest -s -vv -rsx
      - name: run coverage
        run: |
          cd web_app
          coverage run --source web_app/views,web_app/models -m pytest
      - name: run Coveralls
        run: |
          cd web_app
          coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: run-dull-tests
    runs-on: ubuntu-latest
    steps:
      - name: Send webhook
        run: curl -X POST https://httpbin.org/post -H "x-workflow:$GITHUB_WORKFLOW"
